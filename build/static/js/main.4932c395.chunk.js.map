{"version":3,"sources":["components/Posts/UserStyle.module.css","img/avata.png","components/Posts/Users.jsx","reducers/reducerUsers.js","components/Posts/UsersContainer.jsx","App.js","reportWebVitals.js","store/store-redux.js","index.js"],"names":["module","exports","Users","onChangeFollow","id","props","changeFollow","axios","this","state","pageSize","currentPage","then","response","getUsers","data","items","num","changeCurrentPage","pagesCount","Math","ceil","totalUserCount","pages","i","push","className","style","usersWrapper","paginations","map","item","onClick","onClickPagination","paginationBtn","userList","users","listItem","itemColumn","avatar","src","photos","small","alt","itemName","name","statusWrapper","status","btn","followed","React","Component","CHANGE_FOLOWED","GET_USERS","CHANGE_CURRENT_PAGE","initialState","reduserUsers","action","type","NewState","UsersContainer","connect","dispatch","changeFolowed","getUsersAC","changeCurrentPageAC","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","renderDom","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.4932c395.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"UserStyle_userList__2qikl\",\"usersWrapper\":\"UserStyle_usersWrapper__i7fsh\",\"listItem\":\"UserStyle_listItem__26eB8\",\"itemName\":\"UserStyle_itemName__32KHp\",\"avatar\":\"UserStyle_avatar__NrAp4\",\"itemColumn\":\"UserStyle_itemColumn__3Tu1S\",\"status\":\"UserStyle_status__Yy_5g\",\"statusWrapper\":\"UserStyle_statusWrapper__1FVmc\",\"btn\":\"UserStyle_btn__1mTx4\",\"paginationBtn\":\"UserStyle_paginationBtn__2E3ZZ\",\"currentPage\":\"UserStyle_currentPage__MBhk7\",\"paginations\":\"UserStyle_paginations__XYdX4\"};","export default __webpack_public_path__ + \"static/media/avata.3ca63a6e.png\";","import React from 'react'\r\nimport style from './UserStyle.module.css'\r\nimport avatar from '../../img/avata.png'\r\nimport * as axios from 'axios'\r\n\r\nclass Users extends React.Component {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.state.pageSize}&page=${this.props.state.currentPage}`)\r\n            .then(response => {\r\n                this.props.getUsers(response.data.items)\r\n            })\r\n    }\r\n    onChangeFollow = (id) => {\r\n        this.props.changeFollow(id)\r\n    }\r\n\r\n    onClickPagination(num){\r\n\r\n        this.props.changeCurrentPage(num)\r\n\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.state.pageSize}&page=${num}`)\r\n            .then(response => {\r\n                this.props.getUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.state.totalUserCount / this.props.state.pageSize )\r\n        const pages = []\r\n\r\n        for(let i = 1; i <=pagesCount; i++){\r\n            pages.push(i)\r\n        }\r\n        return (\r\n\r\n\r\n            <div className={style.usersWrapper}>\r\n                <div className={style.paginations}>\r\n                    {\r\n                        pages.map(item => <button onClick={() => {this.onClickPagination(item)}} className={item===this.props.state.currentPage ? style.currentPage : style.paginationBtn} key={item}>{item}</button>)\r\n                    }\r\n                </div>\r\n                <ul className={style.userList}>\r\n                    {this.props.state.users.map(item => <li key={item.id} className={style.listItem}>\r\n                        <div className={style.itemColumn}>\r\n                            <img className={style.avatar} src={!item.photos.small ? avatar : item.photos.small} alt=\"\" />\r\n                        </div>\r\n                        <div className={style.itemColumn}>\r\n                            <span className={style.itemName}>{item.name}</span>\r\n                        </div>\r\n                        <div className={`${style.itemColumn} ${style.statusWrapper}`}>\r\n                            <span className={style.status}>{item.status}</span>\r\n                            <button onClick={() => { this.onChangeFollow(item.id) }} className={style.btn}>{!item.followed ? 'unfollowed' : 'followed'}</button>\r\n                        </div>\r\n                    </li>)}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users","const CHANGE_FOLOWED = 'CHANGE_FOLOWED'\r\nconst GET_USERS = 'GET_USERS'\r\nconst CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 100,\r\n    currentPage: 1\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst reduserUsers = (state = initialState, action) => {\r\n    // debugger\r\n    switch (action.type) {\r\n        case CHANGE_FOLOWED: {\r\n            let NewState = {...state}\r\n            NewState.users = [...state.users]\r\n            NewState.users = NewState.users.map(item => {\r\n                if (item.id === action.id) {\r\n                    item.followed = !item.followed\r\n                    return item\r\n                }\r\n\r\n                return item\r\n            })\r\n            return NewState\r\n        }\r\n        case GET_USERS: {\r\n            const NewState = {...state}\r\n            NewState.users = [...action.users]\r\n            return NewState\r\n        }\r\n        case CHANGE_CURRENT_PAGE: {\r\n            const NewState = {...state}\r\n            NewState.currentPage = action.num\r\n            return NewState\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeFolowed = (id) => {\r\n    return {\r\n        type: CHANGE_FOLOWED,\r\n        id\r\n    }\r\n}\r\n\r\nexport const getUsersAC = (users) => {\r\n    return {\r\n        type: GET_USERS,\r\n        users\r\n\r\n    }\r\n}\r\n\r\nexport const changeCurrentPageAC = (num) => {\r\n    return {\r\n        type: CHANGE_CURRENT_PAGE,\r\n        num\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default reduserUsers","import { connect } from \"react-redux\"\r\nimport Users from \"./Users\"\r\nimport {changeFolowed, getUsersAC, changeCurrentPageAC} from '../../reducers/reducerUsers'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeFollow(id){\r\n            dispatch(changeFolowed(id))\r\n        },\r\n        getUsers(users){\r\n            dispatch(getUsersAC(users))\r\n        },\r\n        changeCurrentPage(num){\r\n            dispatch(changeCurrentPageAC(num))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\r\n\r\nexport default UsersContainer","import React from 'react';\nimport UsersContainer from './components/Posts/UsersContainer';\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <UsersContainer  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux'\r\nimport reduserUsers from '../reducers/reducerUsers'\r\n\r\nlet reducers = combineReducers({\r\n    users: reduserUsers\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store-redux'\nimport { Provider } from 'react-redux';\n\nconst renderDom = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App  />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrenderDom()\n\nstore.subscribe(renderDom)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}